<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cash.register.dao.GoodsStockCheckMapper">
  <resultMap id="BaseResultMap" type="cn.cash.register.dao.domain.GoodsStockCheck">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="check_date" jdbcType="TIMESTAMP" property="checkDate" />
    <result column="seller_no" jdbcType="VARCHAR" property="sellerNo" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, check_date, seller_no, remark, gmt_update, gmt_create
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_stock_check
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods_stock_check
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.cash.register.dao.domain.GoodsStockCheck">
    insert into goods_stock_check (id, check_date, seller_no, 
      remark, gmt_update, gmt_create
      )
    values (#{id,jdbcType=BIGINT}, #{checkDate,jdbcType=TIMESTAMP}, #{sellerNo,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{gmtUpdate,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.cash.register.dao.domain.GoodsStockCheck" useGeneratedKeys="true" keyProperty="id">
    insert into goods_stock_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="checkDate != null">
        check_date,
      </if>
      <if test="sellerNo != null">
        seller_no,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="checkDate != null">
        #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerNo != null">
        #{sellerNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cash.register.dao.domain.GoodsStockCheck">
    update goods_stock_check
    <set>
      <if test="checkDate != null">
        check_date = #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerNo != null">
        seller_no = #{sellerNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cash.register.dao.domain.GoodsStockCheck">
    update goods_stock_check
    set check_date = #{checkDate,jdbcType=TIMESTAMP},
      seller_no = #{sellerNo,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="query" parameterType="cn.cash.register.common.request.GoodsStockCheckQueryRequest" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_stock_check
    where 
		check_date &lt;= STR_TO_DATE(#{checkDateUp},'%Y-%m-%d %H:%i:%s')
  		and
  		check_date &gt;= STR_TO_DATE(#{checkDateDown},'%Y-%m-%d %H:%i:%s')
  </select>
  
</mapper>